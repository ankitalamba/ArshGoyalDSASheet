1. brute force algorithm:
ask the interviewer what are the ranges of the values at the matrix let interviewer says all the values will be on the positive side of zero. then we need to traverse the matrix and whenever we get a zero we have to traverse for its entire rows and columns and place a value that can't be a part of entire matrix let us take -1. as all values will be towards 0. so set all the values to -1.whenever there is a 0 don't change it because that 0 might affect some other rows and column . now whenever it is -1 fill this up with 0. so the matrix will become 0. 
t.c.=O((n*m)+(n*m)){as linearly traversing the array and in every traversal we have to traverse entire row and column.
s.c.=O(1)//chnages done in the matrix itself

2.optimised approach
here we take two dummy arrays 1st will be size of columns and other would be rows. so here when we see 0 then set 0 in the corresponding column and row index. once we have completed linear traversal in the 2d matrix we will again linearly traverse in the given matrix. like we have (0,0) then if there is any 0 in the 0th index of r and c turn it to 0.
t.c.=O(N*M+N*M)
s.c.=O(N)+O(M)


3.most opimised approach
instead of taking 2 dummy arrays explicitly we will take them inside the matrix itself as the 1st row and 1st column as dummy matrices. and we take one more var column which will be initially marked as true because for this 0 dummy matrix would be marked here but for this these rows would be set as 0. so whenever we encounter zero then we got to its dummy position and mark it as zero, now whenever we get next 0 so we see that it is lying in column 0 so we change true to false and after that we again linearly traverse . now in the next step we again linearly traverse from the back if we see anyone 0 then we make both position 0.
t.c.=2*(N*M)
s.c.=O(1)

code:
void setZeroes(vector<vector<int>>& matrix) {
        // m and n are used to calculate number of rows nd columns
        int m=matrix.size(),n=matrix[0].size();
        int col0=1;
        //now linearly traverse in the matrix
for(int i=0;i<m;i++){
    //now check if the value of the any element of the zeroth column of any of the given row i is zero and in that case set column 0 as false and then traverse the rest of the column that starts from 1 and if that is set to 0 (leftmost and topmost guy) and then linearly traverse from the bcakward
if(matrix[i][0]==0)
    col0=0;
for(int j=1;j<n;j++)
if(matrix[i][j]==0)
matrix[i][0]=matrix[0][j]=0;
}
        
        //backward traversing 
for(int i=m-1;i>=0;i--){
for(int j=n-1;j>=1;j--)
    //and check if the dummy value is 0 at any given index and then set[i][j]=0 and after that if column is false then zeroth column is actually set to zero
if(matrix[i][0]==0||matrix[0][j]==0)
    matrix[i][j]=0;
if(col0==0)
    matrix[i][0]=0;
    }
  